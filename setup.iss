; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "iFlytek.Assistant.AuxiliaryDiagnosis"
#define MyAppVersion "1.0"
#define MyAppPublisher "iFlytek"
#define MyAppURL ""
#define MyAppExeName "iFlytek.Assistant.AuxiliaryDiagnosis.exe"
#define IncludeFramework true

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{01C23A1A-E88A-46B8-9ADE-4D9049F9A5B6}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=iFlytek.Assistant.AuxiliaryDiagnosis-Setup
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
;Name: "chinesesimplified"; MessagesFile: "compiler:Languages\ChineseSimplified.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "C:\Users\seeyo\source\repos\ab29693295\Doctor\Doctor\bin\x86\Debug\iFlytek.Assistant.AuxiliaryDiagnosis.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\seeyo\source\repos\ab29693295\Doctor\Doctor\bin\x86\Debug\iFlytek.Assistant.AuxiliaryDiagnosis.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\seeyo\source\repos\ab29693295\Doctor\Doctor\bin\x86\Debug\log4net.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\seeyo\source\repos\ab29693295\Doctor\Doctor\bin\x86\Debug\Newtonsoft.Json.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\seeyo\source\repos\ab29693295\Doctor\Doctor\bin\x86\Debug\SuperSocket.ClientEngine.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\seeyo\source\repos\ab29693295\Doctor\Doctor\bin\x86\Debug\SuperSocket.ProtoBase.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\seeyo\source\repos\ab29693295\Doctor\Doctor\bin\x86\Debug\WebSocket4Net.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\seeyo\source\repos\ab29693295\Doctor\Doctor\bin\x86\Debug\AutoCompleteTextBox.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\seeyo\source\repos\ab29693295\Doctor\Doctor\bin\x86\Debug\Julmar.Core.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\seeyo\source\repos\ab29693295\Doctor\Doctor\bin\x86\Debug\Julmar.Wpf.Behaviors.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\seeyo\source\repos\ab29693295\Doctor\Doctor\bin\x86\Debug\JulMar.Wpf.Helpers.dll"; DestDir: "{app}"; Flags: ignoreversion


#if IncludeFramework
Source: "C:\public\ndp452x86x64.allos.exe"; DestDir: "{tmp}"; Flags: ignoreversion; Check: NeedsFramework
#endif
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKLM; Subkey: "SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\iFlytek.Assistant.AuxiliaryDiagnosis.exe";ValueType: string; ValueName: ""; ValueData: "{app}\iFlytek.Assistant.AuxiliaryDiagnosis.exe"; Flags: uninsdeletekey   


[Icons]
Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
#if IncludeFramework
Filename: {tmp}\ndp452x86x64.allos.exe; Parameters: "/q:a /c:""install /l /q"""; WorkingDir: {tmp}; Flags: skipifdoesntexist; StatusMsg: "Installing .NET Framework if needed"
#endif

[code]
// Indicates whether .NET Framework 4.5 is installed.
function IsDotNET40Detected(): boolean;
var
    success: boolean;
    install: cardinal;
begin
    success := RegQueryDWordValue(HKLM, 'SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full', 'Install', install);
    Result :=  success and (install = 1);
end;

//RETURNS OPPOSITE OF IsDotNet20Detected FUNCTION
//Remember this method from the Files section above
function NeedsFramework(): Boolean;
begin
  Result := (IsDotNET40Detected = false);
end;



function GetCustomSetupExitCode(): Integer;
begin
  if (IsDotNET40Detected = false) then
    begin
      MsgBox('.NET Framework 未能正确安装!',mbError, MB_OK);
      result := -1
    end
end;
